/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    flavor = "hold-preferred";
    tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
	/*
        combo_esc 
        {
            timeout-ms = <500>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
        combo_tab 
        {
            timeout-ms = <500>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
	    layers = <0 1 2>;
        };
        
        combo_vol_plus
        {
            timeout-ms = <500>;
            key-positions = <2 3>;
            bindings = <&kp C_VOL_UP>;
	    layers = <2>;
        };

        combo_play_pause
        {
            timeout-ms = <500>;
            key-positions = <11 12>;
            bindings = <&kp C_PLAY_PAUSE>;
	    layers = <0 2>;
        };

        combo_previous
        {
            timeout-ms = <500>;
            key-positions = <12 13>;
            bindings = <&kp C_PREV>;
	    layers = <2>;
        };

        combo_next
        {
            timeout-ms = <500>;
            key-positions = <13 14>;
            bindings = <&kp C_NEXT>;
	    layers = <2>;
        };

        combo_vol_minus
        {
            timeout-ms = <500>;
            key-positions = <22 23>;
            bindings = <&kp C_VOLUME_DOWN>;
	    layers = <2>;
        };

        combo_backspace
        {
            timeout-ms = <500>;
            key-positions = <8 9>;
            bindings = <&kp BSPC>;
        };

        combo_up
        {
            timeout-ms = <500>;
            key-positions = <7 8>;
            bindings = <&kp UP>;
        };

        combo_down
        {
            timeout-ms = <500>;
            key-positions = <17 18>;
            bindings = <&kp DOWN>;
        };

        combo_left
        {
            timeout-ms = <500>;
            key-positions = <16 17>;
            bindings = <&kp LEFT>;
        };

        combo_right
        {
            timeout-ms = <500>;
            key-positions = <18 19>;
            bindings = <&kp RIGHT>;
        };

        combo_enter
        {
            timeout-ms = <500>;
            key-positions = <17 18 19>;
            bindings = <&kp ENTER>;
        };
	*/
	
	combo_trilayer
        {
            timeout-ms = <500>;
            key-positions = <31 32>;
            bindings = <&mo 3>;
        };
	
	/*
	combo_numrow_1
        {
            timeout-ms = <100>;
            key-positions = <20 21>;
            bindings = <&kp NUMBER_1>;
	    layers = <3>;
        };
	
	combo_numrow_2
        {
            timeout-ms = <100>;
            key-positions = <21 22>;
            bindings = <&kp NUMBER_2>;
	    layers = <3>;
        };
	
	combo_numrow_3
        {
            timeout-ms = <100>;
            key-positions = <22 23>;
            bindings = <&kp NUMBER_3>;
	    layers = <3>;
        };
	
	combo_numrow_4
        {
            timeout-ms = <100>;
            key-positions = <23 24>;
            bindings = <&kp NUMBER_4>;
	    layers = <3>;
        };
	
	combo_numrow_5
        {
            timeout-ms = <100>;
            key-positions = <20 21 22>;
            bindings = <&kp NUMBER_5>;
	    layers = <3>;
        };
	
	combo_numrow_6
        {
            timeout-ms = <100>;
            key-positions = <21 22 23>;
            bindings = <&kp NUMBER_6>;
	    layers = <3>;
        };
	
	combo_numrow_7
        {
            timeout-ms = <100>;
            key-positions = <22 23 24>;
            bindings = <&kp NUMBER_7>;
	    layers = <3>;
        };
	
	combo_bluetooth_clear
        {
            timeout-ms = <200>;
            key-positions = <20 21 28 29>;
            bindings = <&bt BT_CLR>;
	    layers = <2>;
        };
	
	combo_bluetooth_0
        {
            timeout-ms = <200>;
            key-positions = <20 21>;
            bindings = <&bt BT_SEL 0>;
	    layers = <2>;
        };
	
	combo_bluetooth_1
        {
            timeout-ms = <200>;
            key-positions = <21 22>;
            bindings = <&bt BT_SEL 1>;
	    layers = <2>;
        };
	
	combo_bluetooth_2
        {
            timeout-ms = <200>;
            key-positions = <22 23>;
            bindings = <&bt BT_SEL 2>;
	    layers = <2>;
        };
	
	combo_bluetooth_3
        {
            timeout-ms = <200>;
            key-positions = <23 24>;
            bindings = <&bt BT_SEL 3>;
	    layers = <2>;
        };
	
	combo_bluetooth_4
        {
            timeout-ms = <200>;
            key-positions = <24 25>;
            bindings = <&bt BT_SEL 4>;
	    layers = <2>;
        };
	
	combo_lgui 
        {
            timeout-ms = <500>;
            key-positions = <28 29>;
            bindings = <&kp LGUI>;
	    layers = <0 1 2>;
        };
	
	combo_lalt 
        {
            timeout-ms = <500>;
            key-positions = <25 26>;
            bindings = <&kp LALT>;
	    layers = <0 1 2>;
        };
	
	combo_lctrl 
        {
            timeout-ms = <500>;
            key-positions = <27 28 29>;
            bindings = <&kp LCTRL>;
	    layers = <0 1 2>;
        };
	
	combo_ralt 
        {
            timeout-ms = <500>;
            key-positions = <5 6>;
            bindings = <&kp RALT>;
	    layers = <0 1 2>;
        };
	*/

        
    };

        keymap {
                compatible = "zmk,keymap";
                
        default_layer
        {
      
            //  | Q      | W      | E      | R     | T          |       | Y           | U     | I     | O      | P     |
            //  | A      | S      | D      | F     | G          |       | H           | J     | K     | L      | SEMI  |
            //  | Z      | X      | C      | V     | B          |       | N           | M     | COMMA | PERIOD | SLASH |
            //                             | TG(2) | LSHFT_BPSC | TG(3) | RSHFT_SPACE | TG(1) |
                
            bindings = <
            &kp Q  &kp W  &kp E  &kp R   &kp T                  &kp Y      &kp U  &kp I      &kp O       &kp P
            &kp A  &kp S  &kp D  &kp F   &kp G                  &kp H      &kp J  &kp K      &kp L       &kp SEMI
            &kp Z  &kp X  &kp C  &kp V   &kp B                  &kp N      &kp M  &kp COMMA  &kp PERIOD  &kp FSLH
                                 &mo 2   &kp LSHFT              &kp SPACE  &mo 1
            >;

        };

        left_layer
        {
            
            //  |  EXCL   |  AT          |  POUND  |  DLLR  | PRCNT |           | CARET | AMPS  | ASTRK | LPAR | RPAR  |
            //  |  MINUS  |  UNDERSCORE  |  EQUAL  |  PLUS  | BSLH  |           | LBKT  | LBRC  | RBRC  | SQT  | DQT   |
            //  |  NONE   |  NONE        |  NONE   |  GRAVE | TILDE |           | PIPE  | RBKT  | LT    | GT   | QMARK |
            //                                     |  TG(1) | BPSC  |           | SPACE | TRANS |
                
            bindings = <
            &kp EXCL   &kp AT           &kp POUND  &kp DLLR    &kp PRCNT         &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR 
            &kp MINUS  &kp UNDERSCORE   &kp EQUAL  &kp PLUS    &kp BSLH          &kp LBKT   &kp LBRC   &kp RBRC   &kp SQT   &kp DQT 
            &none      &none            &none      &kp GRAVE   &kp TILDE         &kp PIPE   &kp RBKT   &kp LT     &kp GT    &kp QMARK 
                                                   &none       &kp BSPC          &kp SPACE  &trans
            >;

        };
        
        right_layer
        {
        
            //  |  F1  |  F2  |  F3   |  F4    |  F5    |                            |  NONE   |  7  |  8  |  9  |  F11  |
            //  |  F6  |  F7  |  F8   |  F9    |  F10   |                            |  COMMA  |  4  |  5  |  6  |  F12  |
            //  |  BT0 |  BT1 |  BT2  |  BT3   |  BT4   |                            |  DOT    |  1  |  2  |  3  |  BTX  |
            //                        |  NONE  |  LSHF  |                            |  SPACE  |  0  |
                
            bindings = <
            &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                &none            &kp NUMBER_7   &kp NUMBER_8   &kp NUMBER_9   &kp F11 
            &kp F6        &kp F7        &kp F8        &kp F9        &kp F10               &kp COMMA        &kp NUMBER_4   &kp NUMBER_5   &kp NUMBER_6   &kp F12
            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &kp DOT          &kp NUMBER_1   &kp NUMBER_2   &kp NUMBER_3   &bt BT_CLR
	                                              &trans        &kp LSHFT             &kp SPACE        &kp NUMBER_0
            >;

        }; 


        
        tri_layer 
        {
        
            //  |  ESC    |  MBR   |  MUP   |  MBL   |  PG_UP  |          |  HOME   |  INSERT  |  UP     |  DEL    |  BSPC   |
            //  |  TAB    |  MLF   |  MDN   |  MRT   |  PF_DN  |          |  END    |  LEFT    |  DOWN   |  RIGHT  |  ENTER  |
            //  |  LCTRL  |  LALT  |  LGUI  |  C     |  V      |          |  NEXT   |  PREV    |  VOLUP  |  VOLDN  |  RALT   |
            //                              |  NONE  |  TRANS  |          |  TRANS  |  NONE    |
                
            bindings = <
            &kp ESC    &none     &none     &none   &kp PG_UP       &kp HOME      &kp C_PP      &kp UP        &kp DEL       &kp BSPC
            &kp TAB    &none     &none     &none   &kp PG_DN       &kp END       &kp LEFT      &kp DOWN      &kp RIGHT     &kp ENTER 
            &sk LCTRL  &sk LALT  &sk LGUI  &kp C   &kp V           &kp C_PREV    &kp C_NEXT    &kp C_VOL_UP  &kp C_VOL_DN  &sk RALT   
                                           &none   &trans          &trans        &none
            >;

        };  	
        
	};
};
